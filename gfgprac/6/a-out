3
7
17 15 8 9 2 4 6
4
1 3 5 7
7
8 12 10 5 4 1 6
/* Following is the Linked list node structure */
/*struct Node
{
    int data;
    Node* next;
};*/
#include <bits/stdc++.h>
using namespace std;
void reorderList(Node* head)
{
    // Your code here
    if(!head) return ;
    if(!head->next) return ;
    stack<int> st;
    queue<int> q;
    int len=0;
    Node *curr=head;
    while(curr){
        st.push(curr->data);
        curr=curr->next;
        len++;
    }
    curr=head;
    while(curr){
        q.push(curr->data);
        curr=curr->next;
    }
    //curr=nh;
    vector<int> v;
    int i=0;
    while(!st.empty()&&!q.empty()&&i<len){
        if(st.top()==q.front()){
            v.push_back(st.top());
            break;
        }
        v.push_back(q.front());
        v.push_back(st.top());
        st.pop();
        q.pop();
        i+=2;
    }
    //for(int i=0;i<v.size();i++) cout<<v[i]<<" ";
    //cout<<endl;
    curr=head;
    for(int i=0;i<v.size();i++){
        curr->data=v[i];
        curr=curr->next;
    }
}
